____________________________________
Test the list
___________________________________

list is a base class which has been inherited by MyList
prints an empty list if nothing is passed to it

	>>> MyList = __import__('1-my_list').MyList
        >>> my_list = MyList()
        >>> print(my_list)
        []

prints the list
	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> print(my_list)
	[1, 4, 2]

another instance of the sort which actually sort

	>>> my_list = MyList()
	>>> my_list.append(7)
	>>> my_list.append(5)
	>>> my_list.append(60)
	>>> my_list.print_sorted()
	[5, 7, 60]

let's try string

	>>> my_list = MyList()
	>>> my_list.append("i")
	>>> my_list.append("am")
	>>> my_list.append("a")
	>>> my_list.append("man")
	>>> print(my_list)
	['i', 'am', 'a', 'man']

let's try sorted string

	>>> my_list = MyList()
	>>> my_list.append("i")
	>>> my_list.append("am")
	>>> my_list.append("a")
	>>> my_list.append("man")
	>>> my_list.print_sorted()
	['a', 'am', 'i', 'man']

nothing to sort on an empty list

::

	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

::

when sorted have no method

	>>> my_list = MyList()
	>>> print(my_list.print_sorted)
	<bound method MyList.print_sorted of []>

::

	>>> my_list = MyList()
        >>> my_list.append("apple")
        >>> my_list.append("banana")
        >>> my_list.append("cherry")
	>>> print(my_list)
	['apple', 'banana', 'cherry']
	>>> my_list.print_sorted
	<bound method MyList.print_sorted of ['apple', 'banana', 'cherry']>

::

	>>> my_list = MyList([1, 2, 3])
	>>> print(my_list)
	[1, 2, 3]

::

	>>> my_list = MyList(None)
	Traceback (most recent call last):
	TypeError: 'NoneType' object is not iterable

::

	>>> my_list = MyList()
    	>>> my_list.append(1)
    	>>> my_list.append(2)
    	>>> my_list.append(3)
    	>>> print(my_list)
    	[1, 2, 3]

::

	>>> my_list[0] = 5
    	>>> print(my_list)
    	[5, 2, 3]

::

	>>> my_list.remove(5)
    	>>> print(my_list)
    	[2, 3]

::

	>>> my_list.print_sorted(1)
    	Traceback (most recent call last):
    	TypeError: print_sorted() takes 1 positional argument but 2 were given

::

	>>> my_list.append(1)
    	>>> my_list.append(4)
    	>>> my_list.append(2)
    	>>> my_list.append(3)
    	>>> my_list.append(5)
    	>>> print(my_list)
	[2, 3, 1, 4, 2, 3, 5]

::

	>>> my_list.print_sorted()
    	[1, 2, 2, 3, 3, 4, 5]

::

	>>> print(my_list)
        [2, 3, 1, 4, 2, 3, 5]

::

	 >>> my_list = MyList()
    	>>> my_list.append("Brennan")
    	>>> my_list.append("Poppy")
    	>>> my_list.append("School")
    	>>> my_list.append("Holberton")
    	>>> my_list.append("Betty")
    	>>> print(my_list)
    	['Brennan', 'Poppy', 'School', 'Holberton', 'Betty']

::

	>>> my_list.print_sorted()
    	['Betty', 'Brennan', 'Holberton', 'Poppy', 'School']

::

	>>> print(my_list)
    	['Brennan', 'Poppy', 'School', 'Holberton', 'Betty']

::

	>>> my_list = MyList()
    	>>> my_list.print_sorted()
    	[]
