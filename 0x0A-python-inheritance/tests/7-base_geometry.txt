__________________________
testing the baseclass to see its functionalty
__________________________

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)

::

let us test giving value a zero

	>>> bg.integer_validator("my_int", 0)
	Traceback (most recent call last):
         File "<stdin>", line 1, in ?
        ValueError: my_int must be greater than 0

::

let us test for a value below 0

	>>> bg.integer_validator("my_int", -1)
        Traceback (most recent call last):
         File "<stdin>", line 1, in ?
        ValueError: my_int must be greater than 0

::

let us try value with float

	>>> bg.integer_validator("my_int", 6.99)
        Traceback (most recent call last):
         File "<stdin>", line 1, in ?
        TypeError: my_int must be an integer

::

let us try with string

	>>> bg.integer_validator("my_int", "Crypto Tech Coder")
        Traceback (most recent call last):
         File "<stdin>", line 1, in ?
        TypeError: my_int must be an integer

::

let us try a list

	>>> bg.integer_validator("my_int", [6, 8, 9])
        Traceback (most recent call last):
         File "<stdin>", line 1, in ?
        TypeError: my_int must be an integer
